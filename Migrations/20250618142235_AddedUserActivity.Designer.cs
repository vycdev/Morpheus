// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Morpheus.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Morpheus.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250618142235_AddedUserActivity")]
    partial class AddedUserActivity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Morpheus.Database.Models.ButtonGamePress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GuildId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Score")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("ButtonGamePresses");
                });

            modelBuilder.Entity("Morpheus.Database.Models.Guild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("LevelUpMessages")
                        .HasColumnType("boolean");

                    b.Property<decimal>("LevelUpMessagesChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("LevelUpQuotes")
                        .HasColumnType("boolean");

                    b.Property<decimal>("LevelUpQuotesChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PinsChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuoteAddRequiredApprovals")
                        .HasColumnType("integer");

                    b.Property<int>("QuoteRemoveRequiredApprovals")
                        .HasColumnType("integer");

                    b.Property<decimal>("QuotesApprovalChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("UseActivityRoles")
                        .HasColumnType("boolean");

                    b.Property<bool>("UseGlobalQuotes")
                        .HasColumnType("boolean");

                    b.Property<decimal>("WelcomeChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("WelcomeMessages")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Morpheus.Database.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Severity")
                        .HasColumnType("integer");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Morpheus.Database.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GuildId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Removed")
                        .HasColumnType("boolean");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("Morpheus.Database.Models.QuoteScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("QuoteId")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.HasIndex("UserId");

                    b.ToTable("QuoteScore");
                });

            modelBuilder.Entity("Morpheus.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscordId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastUsernameCheck")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<bool>("LevelUpMessages")
                        .HasColumnType("boolean");

                    b.Property<bool>("LevelUpQuotes")
                        .HasColumnType("boolean");

                    b.Property<long>("TotalXp")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DiscordId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Morpheus.Database.Models.User_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("GuildId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MessageLength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("XpGained")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Activity");
                });

            modelBuilder.Entity("Morpheus.Database.Models.ButtonGamePress", b =>
                {
                    b.HasOne("Morpheus.Database.Models.Guild", "Guild")
                        .WithMany("ButtonGamePresses")
                        .HasForeignKey("GuildId");

                    b.HasOne("Morpheus.Database.Models.User", "User")
                        .WithMany("ButtonGamePresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Morpheus.Database.Models.Quote", b =>
                {
                    b.HasOne("Morpheus.Database.Models.Guild", "Guild")
                        .WithMany("Quotes")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morpheus.Database.Models.User", "User")
                        .WithMany("Quotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Morpheus.Database.Models.QuoteScore", b =>
                {
                    b.HasOne("Morpheus.Database.Models.Quote", "Quote")
                        .WithMany("Scores")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morpheus.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Morpheus.Database.Models.User_Activity", b =>
                {
                    b.HasOne("Morpheus.Database.Models.Guild", "Guild")
                        .WithMany("UserActivities")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Morpheus.Database.Models.User", "User")
                        .WithMany("UserActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Morpheus.Database.Models.Guild", b =>
                {
                    b.Navigation("ButtonGamePresses");

                    b.Navigation("Quotes");

                    b.Navigation("UserActivities");
                });

            modelBuilder.Entity("Morpheus.Database.Models.Quote", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Morpheus.Database.Models.User", b =>
                {
                    b.Navigation("ButtonGamePresses");

                    b.Navigation("Quotes");

                    b.Navigation("UserActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
